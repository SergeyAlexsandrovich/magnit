{"version":3,"sources":["components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","components/section-title/SectionTitle.tsx","components/section-title/index.ts","components/centered-section-item/CenteredGrid.tsx","components/centered-section-item/index.ts","components/list/EmptyList.tsx","components/list/index.ts","containers/users/UserList.tsx","containers/users/index.ts"],"names":["SectionLayout","props","children","rest","Grid","container","direction","css","width","minHeight","displayName","SectionTitle","title","item","height","boxShadow","Paper","square","display","alignItems","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","CenteredGrid","flexDirection","justifyContent","EmptyList","button","justify","alignContent","marginBottom","align","color","colors","black","fontWeight","fontSize","xLarge","secondary","larger","columns","key","label","sortable","UserList","context","useContext","AppContext","users","useUsers","courier","empty","length","margin","paper","marginTop","padding","data","map","user","fullName","firstName","lastName"],"mappings":"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","file":"static/js/7.87165e58.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\n\nexport const SectionLayout: React.FC<React.ComponentProps<typeof Grid>> = props => {\n    const { children, ...rest } = props;\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={{\n                width: \"100%\",\n                minHeight: \"100vh\",\n            }}\n            {...rest}\n        >\n            {children}\n        </Grid>\n    );\n};\n\nSectionLayout.displayName = \"SectionLayout\";\n","export * from \"./SectionLayout\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={{\n                height: \"var(--section-title-height)\",\n                boxShadow: \"0 6px 20px rgba(220, 227, 235, 0.3)\",\n            }}\n        >\n            <Paper\n                square={true}\n                css={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    boxShadow: \"none !important\",\n                }}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n\nSectionTitle.displayName = \"SectionTitle\";\n","export * from \"./SectionTitle\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\n\nexport const CenteredGrid: React.FC<React.ComponentProps<typeof Grid>> = props => {\n    const { children, ...rest } = props;\n\n    return (\n        <Grid\n            item\n            xs\n            css={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n            {...rest}\n        >\n            {children}\n        </Grid>\n    );\n};\n\nCenteredGrid.displayName = \"CenteredSectionItem\";\n","export * from \"./CenteredGrid\";\n","/** @jsx jsx */\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport { CenteredGrid } from \"components/centered-section-item\";\nimport * as React from \"react\";\n\ninterface IEmptyListProps {\n    title: string;\n    button?: React.ReactNode;\n}\n\nexport const EmptyList: React.FC<IEmptyListProps> = ({ title, button, children }) => {\n    return (\n        <CenteredGrid>\n            <Grid container justify=\"center\" alignContent=\"center\" direction=\"column\">\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.black,\n                            fontWeight: 500,\n                            fontSize: theme.fontSize.xLarge,\n                        })}\n                    >\n                        <span>{title}</span>\n                    </Typography>\n                </Grid>\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.secondary,\n                            fontSize: theme.colors.larger,\n                        })}\n                    >\n                        {children}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item>{button}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CenteredGrid>\n    );\n};\n\nEmptyList.displayName = \"EmptyList\";\n","export * from \"./EmptyList\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { IColumn, Table } from \"@magnit/components\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { EmptyList } from \"components/list\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { AppContext } from \"context\";\nimport { useUsers } from \"hooks\";\nimport { useContext } from \"react\";\n\nconst columns: IColumn[] = [\n    { key: \"fullName\", label: \"ФИО исполнителя\", sortable: false },\n    { key: \"email\", label: \"Эл. почта\", sortable: false },\n];\n\nexport interface IUserListProps extends RouteComponentProps {}\n\nexport const UserList: React.FC<IUserListProps> = () => {\n    const context = useContext(AppContext);\n\n    const users = useUsers(context.courier);\n\n    const empty = !users.length;\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Список исполнителей\" />\n            {empty && <EmptyList title=\"Исполнителей нет\" />}\n            {!empty && (\n                <Paper\n                    square={true}\n                    css={({ spacing, boxShadow }) => ({\n                        margin: spacing(3),\n                        boxShadow: boxShadow.paper,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        css={theme => ({ marginTop: theme.spacing(2) })}\n                    >\n                        <Grid xs={12} item css={theme => ({ padding: theme.spacing(3) })}>\n                            <Table\n                                columns={columns}\n                                data={users.map(user => ({\n                                    ...user,\n                                    fullName: `${user.firstName} ${user.lastName}`,\n                                }))}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )}\n        </SectionLayout>\n    );\n};\n\nUserList.displayName = \"UserList\";\n","export * from \"./UserList\";\n"],"sourceRoot":""}